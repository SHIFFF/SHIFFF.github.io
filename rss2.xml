<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>微弱的光</title>
    <link>http://shiff.top/</link>
    
    <atom:link href="http://shiff.top/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>千里之行，始于足下</description>
    <pubDate>Wed, 12 Apr 2023 17:42:38 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>【哈希+map】2404.出现最频繁的偶数元素</title>
      <link>http://shiff.top/2023/04/13/%E5%87%BA%E7%8E%B0%E6%9C%80%E9%A2%91%E7%B9%81%E7%9A%84%E5%81%B6%E6%95%B0%E5%85%83%E7%B4%A0/</link>
      <guid>http://shiff.top/2023/04/13/%E5%87%BA%E7%8E%B0%E6%9C%80%E9%A2%91%E7%B9%81%E7%9A%84%E5%81%B6%E6%95%B0%E5%85%83%E7%B4%A0/</guid>
      <pubDate>Wed, 12 Apr 2023 17:40:12 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;【哈希-map】2404-出现最频繁的偶数元素&quot;&gt;&lt;a href=&quot;#【哈希-map】2404-出现最频繁的偶数元素&quot; class=&quot;headerlink&quot; title=&quot;【哈希+map】2404. 出现最频繁的偶数元素&quot;&gt;&lt;/a&gt;【哈希+map】2404. 出现</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="【哈希-map】2404-出现最频繁的偶数元素"><a href="#【哈希-map】2404-出现最频繁的偶数元素" class="headerlink" title="【哈希+map】2404. 出现最频繁的偶数元素"></a>【哈希+map】2404. 出现最频繁的偶数元素</h2><blockquote><p> Problem: <a href="https://leetcode.cn/problems/most-frequent-even-element/description/">2404. 出现最频繁的偶数元素</a></p></blockquote><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>从数组中找出出现次数最多的偶数（如果这样的数有多个，选取较小的那个）</p><h1 id="解题方法"><a href="#解题方法" class="headerlink" title="解题方法"></a>解题方法</h1><p>原本的想法是使用map+set，map当作哈希表用来计数，set来记录出现次数最多的偶数，(看了大佬的代码)后来优化了只用map，使用int变量res记录出现次数最多的偶数，如果出现次数一样多，且这个数较小，则更新res。</p><p>顺便复习了下C++中map和set的用法，这两个都只能通过使用迭代器遍历，但是map可以通过map[key]的方式来访问和赋值，可使用的函数用<code>begin()</code>、<code>end()</code>、<code>find()</code>、<code>clear()</code>等等。</p><h1 id="复杂度"><a href="#复杂度" class="headerlink" title="复杂度"></a>复杂度</h1><ul><li><p>时间复杂度: </p><blockquote><p>$O(n)$</p></blockquote></li><li><p>空间复杂度: </p><blockquote><p>$O(n)$</p></blockquote></li></ul><h1 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h1><p>原版:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/***</span></span><br><span class="line"><span class="comment">原版</span></span><br><span class="line"><span class="comment">从数组中找出出现次数最多的偶数（如果这样的数有多个，选取较小的那个）</span></span><br><span class="line"><span class="comment">***/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">mostFrequentEven</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//记录偶数出现的次数,存在mp中</span></span><br><span class="line">        unordered_map&lt;<span class="type">int</span>, <span class="type">int</span>&gt; mp;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; nums.<span class="built_in">size</span>(); i++)&#123;</span><br><span class="line">            <span class="type">int</span> num = nums[i];</span><br><span class="line">            <span class="keyword">if</span>(num%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(mp.<span class="built_in">find</span>(num)==mp.<span class="built_in">end</span>())&#123;<span class="comment">//找不到</span></span><br><span class="line">                    mp[num] = <span class="number">1</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    mp[num]++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//找到mp中的最大值进行插入</span></span><br><span class="line">        <span class="type">int</span> max =  <span class="number">-1</span>;</span><br><span class="line">        set&lt;<span class="type">int</span>&gt; res;</span><br><span class="line">        <span class="keyword">for</span>(unordered_map&lt;<span class="type">int</span>, <span class="type">int</span>&gt;::iterator it = mp.<span class="built_in">begin</span>(); it != mp.<span class="built_in">end</span>(); it++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(it-&gt;second &gt; max)&#123;</span><br><span class="line">                max = it-&gt;second;<span class="comment">//更新最大值</span></span><br><span class="line">                res.<span class="built_in">clear</span>();</span><br><span class="line">                res.<span class="built_in">insert</span>(it-&gt;first);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(it-&gt;second == max)&#123;</span><br><span class="line">                res.<span class="built_in">insert</span>(it-&gt;first);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(max==<span class="number">-1</span>) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> *(res.<span class="built_in">begin</span>());</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>简单优化后:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/***</span></span><br><span class="line"><span class="comment">简单优化后</span></span><br><span class="line"><span class="comment">从数组中找出出现次数最多的偶数（如果这样的数有多个，选取较小的那个）</span></span><br><span class="line"><span class="comment">***/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">mostFrequentEven</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//记录偶数出现的次数,存在mp中</span></span><br><span class="line">        unordered_map&lt;<span class="type">int</span>, <span class="type">int</span>&gt; mp;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; nums.<span class="built_in">size</span>(); i++)&#123;</span><br><span class="line">            <span class="type">int</span> num = nums[i];</span><br><span class="line">            <span class="keyword">if</span>(num%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(mp.<span class="built_in">find</span>(num)==mp.<span class="built_in">end</span>())&#123;<span class="comment">//找不到</span></span><br><span class="line">                    mp[num] = <span class="number">1</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    mp[num]++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//找到mp中的最大值进行插入</span></span><br><span class="line">        <span class="type">int</span> max =  <span class="number">-1</span>;</span><br><span class="line">        <span class="type">int</span> res;</span><br><span class="line">        <span class="keyword">for</span>(unordered_map&lt;<span class="type">int</span>, <span class="type">int</span>&gt;::iterator it = mp.<span class="built_in">begin</span>(); it != mp.<span class="built_in">end</span>(); it++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(it-&gt;second &gt; max)&#123;</span><br><span class="line">                max = it-&gt;second;<span class="comment">//更新最大值</span></span><br><span class="line">                res = it-&gt;first;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(it-&gt;second == max &amp;&amp; res &gt; it-&gt;first)&#123;</span><br><span class="line">                 res = it-&gt;first;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(max==<span class="number">-1</span>) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> res;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="http://shiff.top/categories/LeetCode/">LeetCode</category>
      
      <category domain="http://shiff.top/categories/LeetCode/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/">每日一题</category>
      
      <category domain="http://shiff.top/categories/LeetCode/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-4-13/">2023.4.13</category>
      
      
      <category domain="http://shiff.top/tags/%E6%95%B0%E7%BB%84/">数组</category>
      
      <category domain="http://shiff.top/tags/LeetCode/">LeetCode</category>
      
      <category domain="http://shiff.top/tags/%E7%AE%97%E6%B3%95/">算法</category>
      
      <category domain="http://shiff.top/tags/%E5%93%88%E5%B8%8C/">哈希</category>
      
      
      <comments>http://shiff.top/2023/04/13/%E5%87%BA%E7%8E%B0%E6%9C%80%E9%A2%91%E7%B9%81%E7%9A%84%E5%81%B6%E6%95%B0%E5%85%83%E7%B4%A0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>【贪心+模拟】 1147. 段式回文</title>
      <link>http://shiff.top/2023/04/13/%E6%AE%B5%E5%BC%8F%E5%9B%9E%E6%96%87/</link>
      <guid>http://shiff.top/2023/04/13/%E6%AE%B5%E5%BC%8F%E5%9B%9E%E6%96%87/</guid>
      <pubDate>Wed, 12 Apr 2023 17:22:36 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;【13】贪心-模拟-1147-段式回文&quot;&gt;&lt;a href=&quot;#【13】贪心-模拟-1147-段式回文&quot; class=&quot;headerlink&quot; title=&quot;【13】贪心+模拟 1147. 段式回文&quot;&gt;&lt;/a&gt;【13】贪心+模拟 1147. 段式回文&lt;/h2&gt;&lt;p&gt;</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="【13】贪心-模拟-1147-段式回文"><a href="#【13】贪心-模拟-1147-段式回文" class="headerlink" title="【13】贪心+模拟 1147. 段式回文"></a>【13】贪心+模拟 1147. 段式回文</h2><p> Problem: <a href="https://leetcode.cn/problems/longest-chunked-palindrome-decomposition/description/">1147. 段式回文</a></p><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>  拆分字符串，使得拆分的字符串的前部分和后部分完全相同，返回能够拆分出的最大子串数</p><p>  贪心：拆分时，能拆就拆&#x3D;&gt;拆分后的字符串尽可能的长&#x3D;&gt;能够拆分出尽可能多的子串</p><p> 从小到大递归子串长度，模拟切割</p><h1 id="解题方法"><a href="#解题方法" class="headerlink" title="解题方法"></a>解题方法</h1><p>  递归：<br>     含义：当前字符串，能够拆分出的最大子串数<br>     边界：不能拆&#x3D;&gt;空字符串&#x3D;&gt;长度为0</p><p>  字符串的切片[(par1)..(par2)] &#x3D;&gt;[par1,par2) 左闭右开</p><h1 id="复杂度"><a href="#复杂度" class="headerlink" title="复杂度"></a>复杂度</h1><ul><li><p>时间复杂度:  O(n^2)</p></li><li><p>空间复杂度: O(n)</p></li></ul><h1 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h1><p><code>s.substr(i,b)</code>: <code>i</code>表示从第<code>i</code>个位置开始选取长度为<code>b</code>的子串，<strong>b省略</strong>默认取到字符串末尾</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">longestDecomposition</span><span class="params">(string text)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n = text.<span class="built_in">length</span>();</span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;<span class="comment">//递归边界,长度为0不能拆，返回子串数为0</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n/<span class="number">2</span> ; i++)&#123;<span class="comment">//枚举前后缀长度,从小到大递归前后缀长度可以保证每次分割都是按能拆就拆的思想分割的</span></span><br><span class="line">            <span class="keyword">if</span>(text.<span class="built_in">substr</span>(<span class="number">0</span>,i)==text.<span class="built_in">substr</span>(n-i))&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">2</span> + <span class="built_in">longestDecomposition</span>(text.<span class="built_in">substr</span>(i,n<span class="number">-2</span>*i));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="http://shiff.top/categories/LeetCode/">LeetCode</category>
      
      <category domain="http://shiff.top/categories/LeetCode/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/">每日一题</category>
      
      <category domain="http://shiff.top/categories/LeetCode/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-4-12/">2023.4.12</category>
      
      
      <category domain="http://shiff.top/tags/%E6%95%B0%E7%BB%84/">数组</category>
      
      <category domain="http://shiff.top/tags/LeetCode/">LeetCode</category>
      
      <category domain="http://shiff.top/tags/%E7%AE%97%E6%B3%95/">算法</category>
      
      <category domain="http://shiff.top/tags/%E8%B4%AA%E5%BF%83/">贪心</category>
      
      
      <comments>http://shiff.top/2023/04/13/%E6%AE%B5%E5%BC%8F%E5%9B%9E%E6%96%87/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>217.存在重复元素【简单】</title>
      <link>http://shiff.top/2023/03/16/217-%E5%AD%98%E5%9C%A8%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/</link>
      <guid>http://shiff.top/2023/03/16/217-%E5%AD%98%E5%9C%A8%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/</guid>
      <pubDate>Wed, 15 Mar 2023 20:36:07 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;217-存在重复元素【简单】&quot;&gt;&lt;a href=&quot;#217-存在重复元素【简单】&quot; class=&quot;headerlink&quot; title=&quot;217.存在重复元素【简单】&quot;&gt;&lt;/a&gt;217.存在重复元素【简单】&lt;/h1&gt;&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot;</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="217-存在重复元素【简单】"><a href="#217-存在重复元素【简单】" class="headerlink" title="217.存在重复元素【简单】"></a>217.存在重复元素【简单】</h1><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>Problem: <a href="https://leetcode.cn/problems/contains-duplicate/description/">217. 存在重复元素</a></p><p>给你一个整数数组 <code>nums</code> 。如果任一值在数组中出现 <strong>至少两次</strong> （appears <strong>at least twice</strong>），返回 <code>true</code> ；如果数组中每个元素互不相同（distinct），返回 <code>false</code> 。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [1,2,3,1]</span><br><span class="line">输出：true</span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [1,2,3,4]</span><br><span class="line">输出：false</span><br></pre></td></tr></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [1,1,1,3,3,4,3,2,4,2]</span><br><span class="line">输出：true</span><br></pre></td></tr></table></figure><p><strong>提示：</strong></p><ul><li><code>1 &lt;= nums.length &lt;= 105</code></li><li><code>-109 &lt;= nums[i] &lt;= 109</code></li></ul><h2 id="解题思路与代码"><a href="#解题思路与代码" class="headerlink" title="解题思路与代码"></a>解题思路与代码</h2><p><strong>思路一：</strong></p><p>初始化标记为false，数组中任意值如果出现了2次，就可以标记为true</p><p>对数值中的每个值出现次数计数，如果某个值在某次计数后出现次数等于2就标记为true。</p><p><strong>难点：</strong>不能用count[num]++来计数，因为nums[i]的取值是可以为负数的，但是数组不能有负索引号</p><p>**解决办法:**其实我上面的方法也是一种哈希表的方法，但我只用过C里面的map，对js中的map的用法不是很熟练，用map对象可以很好的解决负值的问题。暂时不写，还没理解map的用法。</p><p><strong>思路二：</strong></p><p>使用一个的新的数组，遍历<code>nums</code>数组，判断新数组<code>n</code>中是否存在<code>nums[i]</code>，若不存在，则将<code>nums[i]</code>插入新数组<code>n</code>；若存在，则返回true；</p><p>判断数组中是否有某个值存在的方法为<code>indexOf()</code></p><p><strong>思路三：</strong>（官方题解思路）</p><p>在对数字从小到大排序之后，数组的重复元素一定出现在相邻位置中。因此，我们可以扫描已排序的数组，每次判断相邻的两个元素是否相等，如果相等则说明存在重复的元素。</p><h2 id="复杂度"><a href="#复杂度" class="headerlink" title="复杂度"></a>复杂度</h2><ul><li><p>时间复杂度:<br> $O(n)$</p></li><li><p>空间复杂度:<br> $O(n)$</p></li></ul><h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><p>解题思路一：</p><p>暂无</p><p>解题思路二：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 语言为JavaScript</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number[]</span>&#125; <span class="variable">nums</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">boolean</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> containsDuplicate = <span class="keyword">function</span>(<span class="params">nums</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> n = [];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> k <span class="keyword">of</span> nums)&#123;</span><br><span class="line">        <span class="keyword">if</span>(n.<span class="title function_">indexOf</span>(k)==-<span class="number">1</span>)&#123;<span class="comment">//不存在</span></span><br><span class="line">            n.<span class="title function_">push</span>(k);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//上面for/of循环的遍历是js的写法，是ES6新增的</span></span><br><span class="line">    <span class="comment">//下面的代码的for循环遍历方式是c中的惯用写法，是常规的for循环</span></span><br><span class="line">    <span class="comment">// for(let i = 0; i &lt; nums.length; i++)&#123;//遍历数组</span></span><br><span class="line">    <span class="comment">//     if(n.indexOf(nums[i])==-1)&#123;//不存在</span></span><br><span class="line">    <span class="comment">//         n.push(nums[i]);</span></span><br><span class="line">    <span class="comment">//     &#125;else&#123;</span></span><br><span class="line">    <span class="comment">//         return true;</span></span><br><span class="line">    <span class="comment">//     &#125;</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="http://shiff.top/categories/LeetCode/">LeetCode</category>
      
      <category domain="http://shiff.top/categories/LeetCode/%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/">学习计划</category>
      
      <category domain="http://shiff.top/categories/LeetCode/%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/">数据结构</category>
      
      <category domain="http://shiff.top/categories/LeetCode/%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E7%BB%84/">数组</category>
      
      
      <category domain="http://shiff.top/tags/%E6%95%B0%E7%BB%84/">数组</category>
      
      <category domain="http://shiff.top/tags/LeetCode/">LeetCode</category>
      
      <category domain="http://shiff.top/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/">数据结构</category>
      
      <category domain="http://shiff.top/tags/%E7%AE%97%E6%B3%95/">算法</category>
      
      
      <comments>http://shiff.top/2023/03/16/217-%E5%AD%98%E5%9C%A8%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>《javaScript权威指南》读书笔记</title>
      <link>http://shiff.top/2023/03/16/%E3%80%8AjavaScript%E6%9D%83%E5%A8%81%E6%8C%87%E5%8D%97%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</link>
      <guid>http://shiff.top/2023/03/16/%E3%80%8AjavaScript%E6%9D%83%E5%A8%81%E6%8C%87%E5%8D%97%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</guid>
      <pubDate>Wed, 15 Mar 2023 19:06:51 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;《javaScript权威指南》读书笔记&quot;&gt;&lt;a href=&quot;#《javaScript权威指南》读书笔记&quot; class=&quot;headerlink&quot; title=&quot;《javaScript权威指南》读书笔记&quot;&gt;&lt;/a&gt;《javaScript权威指南》读书笔记&lt;/h1&gt;&lt;</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="《javaScript权威指南》读书笔记"><a href="#《javaScript权威指南》读书笔记" class="headerlink" title="《javaScript权威指南》读书笔记"></a>《javaScript权威指南》读书笔记</h1><p>本书笔记基于David Flanagan的《javaScript权威指南》原书第七版中文译本，也就是犀牛书。</p><h2 id="词法结构"><a href="#词法结构" class="headerlink" title="词法结构"></a>词法结构</h2><h3 id="JavaScript程序的文本"><a href="#JavaScript程序的文本" class="headerlink" title="JavaScript程序的文本"></a>JavaScript程序的文本</h3><ul><li>区分大小写</li><li>忽略<strong>程序记号（token）</strong>之间的空格，很大程度上忽略换行符（也有例外）</li></ul><blockquote><p>不太理解什么叫程序记号</p></blockquote><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//单行注释</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*单行注释*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> *多行注释</span></span><br><span class="line"><span class="comment"> *每行开头额外的*不是必需的，只是为了美观</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure><h3 id="字面量"><a href="#字面量" class="headerlink" title="字面量"></a>字面量</h3><p>直接出现在程序中的数据值，如</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">null</span></span><br><span class="line"><span class="literal">false</span></span><br><span class="line"><span class="number">1.2</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="string">&#x27;hello world&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="标识符与保留字"><a href="#标识符与保留字" class="headerlink" title="标识符与保留字"></a>标识符与保留字</h3><h4 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h4><p>用于命名常量、变量、属性、函数和类，就是一个名字，必需由<strong>字母，下划线，美元符号</strong>开头，可由<strong>字母、下划线、美元符号、数字</strong>组成。</p><h4 id="保留字"><a href="#保留字" class="headerlink" title="保留字"></a>保留字</h4><p>一些不能作为标识符使用的单词，如for、if和while</p><p>当然还有一些比较复杂的情况，在一定情况下可以使用为标识符。不过最简单的做法就是不要使用这些单词作为标识符。</p><h3 id="Unicode"><a href="#Unicode" class="headerlink" title="Unicode"></a>Unicode</h3><p>JavaScript程序由Unicode字符集编写，意味标识符可以使用Unicode字母、数字和象形文字（不支持表情符号）。</p><h4 id="Unicode转义序列"><a href="#Unicode转义序列" class="headerlink" title="Unicode转义序列"></a>Unicode转义序列</h4><p>由于某些计算机硬件和软件无法识别、处理Unicode字符，故定义了转义字符，以<code>\u</code>开头，后跟4为十六进制数或包含在一对花括号内的1~6位十六进制数字。</p><blockquote><p>花括号版本是ES6新增的</p></blockquote><p><img src="https://cdn.staticaly.com/gh/SHIFFF/Blogcdn@master/img/image-20230316020145144.png" alt="image-20230316020145144"></p><h4 id="Unicode归一化"><a href="#Unicode归一化" class="headerlink" title="Unicode归一化"></a>Unicode归一化</h4><p>由于不同编码方式的Unicode字符在js中是区分的，如下面的两个标识符</p><p><img src="https://cdn.staticaly.com/gh/SHIFFF/Blogcdn@master/img/image-20230316021128685.png" alt="image-20230316021128685"></p><p><img src="https://cdn.staticaly.com/gh/SHIFFF/Blogcdn@master/img/image-20230316021145803.png" alt="image-20230316021145803"></p><p>虽然看起来完全相同，但由于它们的二进制编码是不同的，所以js也会认为它们是不同的，这会导致看起来相同的两个标识符其实表示的是两个不同的标识符，在赋值等各个操作中会出现问题。</p><p>故在执行程序前，需要保证编辑器能够对源代码执行Unicode归一化。</p><h3 id="可选的分号"><a href="#可选的分号" class="headerlink" title="可选的分号"></a>可选的分号</h3><p>分号用于分隔语句。</p><p>分号可省略的情况：</p><ul><li><p>两条语句分别写在两行（不是一定的）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">3</span>;<span class="comment">//此时这个分号可以省略</span></span><br><span class="line">b = <span class="number">4</span>;</span><br><span class="line"></span><br><span class="line">a = <span class="number">3</span>;b = <span class="number">4</span>;<span class="comment">//分号是必须的</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//也不是所有的换行符都会被当作为分号,只有在不添加符号就无法解析代码的情况下才会把换行符当作分号</span></span><br><span class="line"><span class="keyword">let</span> a</span><br><span class="line">a </span><br><span class="line">= </span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a)</span><br><span class="line"><span class="comment">//会被解释为</span></span><br><span class="line"><span class="keyword">let</span> a; a = <span class="number">3</span>; <span class="variable language_">console</span>.<span class="title function_">log</span>(a);</span><br><span class="line"></span><br><span class="line"><span class="comment">//这种机制会引发一些问题,如下面的例子</span></span><br><span class="line"><span class="keyword">let</span> y = x + f</span><br><span class="line">(a+b).<span class="title function_">toString</span>()</span><br><span class="line"><span class="comment">//会被解释为</span></span><br><span class="line"><span class="keyword">let</span> y = x + <span class="title function_">f</span>(a+b).<span class="title function_">toString</span>();<span class="comment">//不一定与作者的真实意图一致</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//另外一种情况，return、throw、yield、break、continue后面的换行符是一定会被解释为分号的</span></span><br><span class="line"><span class="keyword">return</span> </span><br><span class="line"><span class="literal">true</span>;</span><br><span class="line"><span class="comment">//一定会被解释为</span></span><br><span class="line"><span class="keyword">return</span>; </span><br><span class="line"><span class="literal">true</span>;</span><br><span class="line"><span class="comment">//故一定不能在这些保留字和他们后面的表达式之间加换行符</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>另外，涉及到++、–操作符，必须与操作的表达式位于同一行。</p><p>箭头函数中的<code>=&gt;</code>也必须与参数列表在同一行</p></blockquote></li><li><p>在程序的末尾，接下来的加号是<code>&#125;</code></p></li></ul>]]></content:encoded>
      
      
      <category domain="http://shiff.top/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/">读书笔记</category>
      
      <category domain="http://shiff.top/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/JavaScript/">JavaScript</category>
      
      
      <category domain="http://shiff.top/tags/JavaScript/">JavaScript</category>
      
      <category domain="http://shiff.top/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/">读书笔记</category>
      
      
      <comments>http://shiff.top/2023/03/16/%E3%80%8AjavaScript%E6%9D%83%E5%A8%81%E6%8C%87%E5%8D%97%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Typora的查找（替换）快捷键</title>
      <link>http://shiff.top/2023/03/14/Typora%E7%9A%84%E6%9F%A5%E6%89%BE%EF%BC%88%E6%9B%BF%E6%8D%A2%EF%BC%89%E5%BF%AB%E6%8D%B7%E9%94%AE/</link>
      <guid>http://shiff.top/2023/03/14/Typora%E7%9A%84%E6%9F%A5%E6%89%BE%EF%BC%88%E6%9B%BF%E6%8D%A2%EF%BC%89%E5%BF%AB%E6%8D%B7%E9%94%AE/</guid>
      <pubDate>Tue, 14 Mar 2023 02:23:38 GMT</pubDate>
      
        
        
      <description>&lt;h3 id=&quot;Typora的查找（替换）快捷键&quot;&gt;&lt;a href=&quot;#Typora的查找（替换）快捷键&quot; class=&quot;headerlink&quot; title=&quot;Typora的查找（替换）快捷键&quot;&gt;&lt;/a&gt;Typora的查找（替换）快捷键&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;查找：Ct</description>
        
      
      
      
      <content:encoded><![CDATA[<h3 id="Typora的查找（替换）快捷键"><a href="#Typora的查找（替换）快捷键" class="headerlink" title="Typora的查找（替换）快捷键"></a>Typora的查找（替换）快捷键</h3><ul><li><p>查找：Ctrl+F</p><p><img src="https://cdn.staticaly.com/gh/SHIFFF/Blogcdn@master/img/image-20230314102135161.png" alt="image-20230314102135161"></p></li><li><p>替换：Ctrl+H</p></li></ul><p><img src="https://cdn.staticaly.com/gh/SHIFFF/Blogcdn@master/img/image-20230314102239226.png" alt="image-20230314102239226"></p>]]></content:encoded>
      
      
      
      <category domain="http://shiff.top/tags/Typora/">Typora</category>
      
      <category domain="http://shiff.top/tags/%E5%BF%AB%E6%8D%B7%E9%94%AE/">快捷键</category>
      
      
      <comments>http://shiff.top/2023/03/14/Typora%E7%9A%84%E6%9F%A5%E6%89%BE%EF%BC%88%E6%9B%BF%E6%8D%A2%EF%BC%89%E5%BF%AB%E6%8D%B7%E9%94%AE/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>JavaScript基础语法-dom-bom-js-es6新语法-jQuery-数据可视化</title>
      <link>http://shiff.top/2023/03/12/JavaScript%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95-dom-bom-js-es6%E6%96%B0%E8%AF%AD%E6%B3%95-jQuery-%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/</link>
      <guid>http://shiff.top/2023/03/12/JavaScript%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95-dom-bom-js-es6%E6%96%B0%E8%AF%AD%E6%B3%95-jQuery-%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/</guid>
      <pubDate>Sun, 12 Mar 2023 11:09:11 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;JavaScript基础语法-dom-bom-js-es6新语法-jQuery-数据可视化&quot;&gt;&lt;a href=&quot;#JavaScript基础语法-dom-bom-js-es6新语法-jQuery-数据可视化&quot; class=&quot;headerlink&quot; title=&quot;Ja</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="JavaScript基础语法-dom-bom-js-es6新语法-jQuery-数据可视化"><a href="#JavaScript基础语法-dom-bom-js-es6新语法-jQuery-数据可视化" class="headerlink" title="JavaScript基础语法-dom-bom-js-es6新语法-jQuery-数据可视化"></a>JavaScript基础语法-dom-bom-js-es6新语法-jQuery-数据可视化</h1><p>该课程笔记基于b站pink老师的课程视频，视频链接：<a href="https://www.bilibili.com/video/BV1Sy4y1C7ha/?spm_id_from=333.337.search-card.all.click&vd_source=47b8ae38c6099b5bc1a761ca77b05155">https://www.bilibili.com/video/BV1Sy4y1C7ha/?spm_id_from=333.337.search-card.all.click&amp;vd_source=47b8ae38c6099b5bc1a761ca77b05155</a></p><h2 id="JS基础语法"><a href="#JS基础语法" class="headerlink" title="JS基础语法"></a>JS基础语法</h2><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><ul><li>单行注释 快捷键<code>ctrl + /</code></li><li>多行注释快捷键<code>shift + alt + a</code></li><li>vscode中修改多行注释的快捷键<code>ctrl + shift + /</code></li></ul><h3 id="输入输出语句"><a href="#输入输出语句" class="headerlink" title="输入输出语句"></a>输入输出语句</h3><p>输出：</p><ul><li>浏览器弹出警示框：<code>alert(msg)</code></li><li>浏览器控制台打印输出信息：<code>console.log(msg)</code></li><li>浏览器弹出输入框，用户可以输入：<code>prompt(msg)</code></li></ul><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><p><strong>变量声明与使用</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//age 为一个变量</span></span><br><span class="line"><span class="keyword">var</span> age;</span><br><span class="line"><span class="comment">//变量赋值</span></span><br><span class="line">age = <span class="number">18</span>;</span><br><span class="line"><span class="comment">//变量初始化</span></span><br><span class="line"><span class="keyword">var</span> myname = <span class="string">&#x27;小明&#x27;</span>;<span class="comment">//JS中用单引号，css和html中用双引号</span></span><br><span class="line"><span class="comment">//输出变量值</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(myname);</span><br><span class="line"><span class="comment">//多个变量一起申明</span></span><br><span class="line"><span class="keyword">var</span> age = <span class="number">18</span>,</span><br><span class="line">    address = <span class="string">&#x27;sss&#x27;</span>,</span><br><span class="line">    gz = <span class="number">1323</span>;</span><br><span class="line"><span class="comment">//变量只声明但是不赋值，输出为undefined</span></span><br><span class="line"><span class="comment">//不声明直接赋值使用是可以的，但是会变成全局变量，不推荐</span></span><br><span class="line"><span class="comment">//不声明不赋值，使用时会直接报错</span></span><br></pre></td></tr></table></figure><p><strong>变量的命名规范</strong></p><ul><li>严格区分大小写</li><li>不能以数字开头</li><li>由字母，下划线，数字，美元符号组成。</li><li>不能使用关键字和保留字<code>var for是错误写法</code></li><li>变量名必须有意义</li><li>遵循驼峰命名法：首字母小写，后面单词的首字母大写，例<code>myFirstName</code></li><li>不用使用<code>name</code>作为变量名</li></ul><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><p>JS是<strong>弱类型语言</strong>，变量数据类型是只有程序在运行过程中，根据等号右边的值确定的。</p><p>JS是<strong>动态语言</strong>，变量的数据类型是可以<strong>变化的</strong>。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line">a = <span class="string">&#x27;Pink&#x27;</span>;</span><br></pre></td></tr></table></figure><h4 id="简单数据类型"><a href="#简单数据类型" class="headerlink" title="简单数据类型"></a>简单数据类型</h4><ul><li><p>数字型：<code>Number</code>，包括整数和小数</p><ul><li>数字前面加<code>0</code> 表示八进制 010 &#x3D; 8(10进制)</li><li>数字面前加<code>0x</code> 表示十六进制 0xa &#x3D; 10(10进制)</li><li>数字的最大值：<code>Number.MAX_VALUE;//1.79e+308</code></li><li>数字的最小值：<code>Number.MIN_VALUE;//5E-324</code></li><li>无穷大：<code>Infinity</code></li><li>无穷小：<code>-Infinity</code></li><li>非数值：<code>NaN</code><ul><li><code>isNaN()</code>这个方法用来判断一个变量是否是非数字，如果是数字返回的是<code>false</code>，反之返回<code>true</code></li></ul></li></ul></li><li><p>字符串型：加单（双）引号的内容，JS中推荐<strong>单引号</strong>。外双内单，外单内双</p><ul><li>字符串转义符：都是用<code>\</code>开头，写在字符串内部<ul><li>换行符<code>\n</code></li><li>斜杆<code>\\</code></li><li>单引号<code>\&#39;</code></li><li>双引号<code>\&quot;</code></li><li>tab缩进<code>\t</code></li><li>空格<code>\b</code></li></ul></li><li>获取字符串的长度：<code>str.length</code></li><li>字符串拼接：<code>字符串+任意类型 = 拼接之后的字符串</code></li></ul></li><li><p>布尔型：<code>true</code>&amp;<code>false</code></p></li><li><p>未定义数据类型：<code>undefined</code></p><p>未定义+数字 &#x3D; NaN</p></li><li><p>空值：<code>null</code></p><p>空值 + 数字&#x3D; 数字</p></li></ul><h4 id="获取数据类型"><a href="#获取数据类型" class="headerlink" title="获取数据类型"></a>获取数据类型</h4><p><code>typeof age</code>： 检测数据类型</p><h4 id="数据类型转换"><a href="#数据类型转换" class="headerlink" title="数据类型转换"></a>数据类型转换</h4><ol><li><p>转换为字符串</p><ul><li><p>num.toString()</p></li><li><p>String(num)</p></li><li><p>num+’’()空字符</p></li></ul></li><li><p>转换为数字型</p><ul><li><code>parseInt(str)</code>只能取整数部分</li><li><code>parseFloat(str)</code>可以读取到小数部分</li><li><code>Number(str)</code>强制转换</li><li>隐式转换:<code>&#39;12&#39;-0  ----&gt; 12</code>，<code>&#39;123&#39;-&#39;120&#39; = 3</code>，<code>&#39;123&#39;*1---&gt;123</code></li></ul></li><li><p>转换为布尔型：<code>Boolean(var)</code></p></li></ol><h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3><h4 id="算数运算符"><a href="#算数运算符" class="headerlink" title="算数运算符"></a>算数运算符</h4><p><code>+,-,*,/,%</code></p><p>浮点数不能直接进行运算，会有精度问题</p><h4 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h4><p><img src="https://cdn.staticaly.com/gh/SHIFFF/Blogcdn@master/img/image-20220814160547782.png" alt="image-20220814160547782"></p><h4 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h4><p><img src="https://cdn.staticaly.com/gh/SHIFFF/Blogcdn@master/img/image-20220814160653602.png" alt="image-20220814160653602"></p><p>逻辑中断逻辑与</p><p><code>表达式1 &amp;&amp; 表达式2</code>：表达式1为真返回表达式2，表达式1为假返回表达式1</p><p>逻辑中断逻辑或</p><p><code>表达式1 &amp;&amp; 表达式2</code>：表达式1为真返回表达式1，表达式1为假返回表达式2</p><h4 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h4><p><img src="https://cdn.staticaly.com/gh/SHIFFF/Blogcdn@master/img/image-20220814161715893.png" alt="image-20220814161715893"></p><h4 id="运算符优先级"><a href="#运算符优先级" class="headerlink" title="运算符优先级"></a>运算符优先级</h4><p><img src="https://cdn.staticaly.com/gh/SHIFFF/Blogcdn@master/img/image-20220814205126091.png" alt="image-20220814205126091"></p><h3 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h3><p>顺序流程控制</p><p>分支流程控制</p><h4 id="分支流程控制"><a href="#分支流程控制" class="headerlink" title="分支流程控制"></a>分支流程控制</h4><ul><li><p>if-else语句</p></li><li><p>switch语句</p></li><li><p>三元表达式：条件表达式 ？ 表达式1 ：表达式2</p><blockquote><p>条件表达式成立返回表达式1，反之返回2</p></blockquote></li></ul><h3 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h3><p>for</p><p>while</p><p>do-while</p><p>continue关键字：立刻跳出当前循环，进入下一次循环</p><p>break关键字：退出整个循环</p><h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h3><p>创建数组</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span></span><br><span class="line"><span class="keyword">var</span> arr = <span class="keyword">new</span> <span class="title class_">Array</span>();</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span></span><br><span class="line"><span class="keyword">var</span> arr = [];</span><br></pre></td></tr></table></figure><p>遍历数组</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.<span class="property">length</span>; i++)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(arr[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>新增数组元素</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>新增数组元素，改变数组长度</span><br><span class="line">arr.<span class="property">length</span> = <span class="number">5</span>;<span class="comment">//手动增加数组长度</span></span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>修改索引号</span><br><span class="line">arr[arr.<span class="property">length</span>] = <span class="string">&#x27;shiff&#x27;</span>;</span><br></pre></td></tr></table></figure><p>冒泡排序</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">23</span>, <span class="number">43</span>, <span class="number">52</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">45</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; arr.<span class="property">length</span> - <span class="number">1</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt;= arr.<span class="property">length</span> - <span class="number">1</span> - i; j++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>]) &#123;</span><br><span class="line">            <span class="keyword">let</span> temp = arr[j];</span><br><span class="line">            arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">            arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><p>声明函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">sayHI</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;hi&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getSum</span>(<span class="params">num1, num2</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(num1 + num2);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span></span><br><span class="line"><span class="keyword">var</span> 变量名 = <span class="keyword">function</span>(<span class="params"></span>) &#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> getSum = <span class="keyword">function</span>(<span class="params">num1, num2</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(num1 + num2);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>js函数申明中的形参可以不用申明变量类型</p></blockquote><p>调用函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">sayHI</span>();</span><br></pre></td></tr></table></figure><p><code>arguments</code>:函数中的伪参数，伪数组，拥有length属性，拥有索引号,不具有数组中的某些方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">arguments</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">fn</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>);</span><br></pre></td></tr></table></figure><h3 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h3><p>全局作用域：整个script标签，或者一个单独的js文件</p><p>局部作用域：函数作用域（函数内部），局部作用域内：局部覆盖全局</p><p>作用域链：就近原则</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> num = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> num = <span class="number">11</span>;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">fun</span>(<span class="params"></span>)&#123;</span><br><span class="line">        consolo.<span class="title function_">log</span>(num);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">fun</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fn</span>();<span class="comment">//---&gt; num = 11;接近原则</span></span><br></pre></td></tr></table></figure><h3 id="JS的预解析"><a href="#JS的预解析" class="headerlink" title="JS的预解析"></a>JS的预解析</h3><p>js引擎先预解析，在代码执行：</p><p>（1）预解析：js引擎会把js里面所有var 还有function提升到当前作用域的最前面</p><p>（2）代码执行：按照代码书写顺序从上往下执行</p><p>2.预解析 包括：</p><ul><li>变量预解析：把所有变量的声明提升到当前作用域的最前面，但是不提升赋值</li><li>函数预解析：</li></ul><h3 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h3><p>对象是一个具体的事物</p><p>对象的构成：</p><ul><li>属性：特征</li><li>方法：行为</li></ul><h4 id="创建对象"><a href="#创建对象" class="headerlink" title="创建对象"></a>创建对象</h4><p>利用字面量创建对象</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;&#125;;<span class="comment">//创建了一个空的对象</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    uname : <span class="string">&#x27;shiff&#x27;</span>,</span><br><span class="line">    age : <span class="number">18</span>,</span><br><span class="line">    <span class="attr">gender</span>: <span class="string">&#x27;女&#x27;</span>,</span><br><span class="line">    <span class="attr">sayHi</span>: <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;hi~&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//对象里面的属性或者方法我们采取键值对的形式 键 属性名 ： 值 属性值</span></span><br><span class="line"><span class="comment">//多个属性或者方法之间用逗号，最后一个属性或方法不用加逗号</span></span><br><span class="line"><span class="comment">//方法冒号后面跟的是一个匿名函数</span></span><br><span class="line"><span class="comment">//第二种调用方法：对象名[‘属性名’]</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj[<span class="string">&#x27;gender&#x27;</span>]);</span><br><span class="line"><span class="comment">//调用对象的方法：对象名.方法（）</span></span><br><span class="line">obj.<span class="title function_">sayHi</span>();</span><br></pre></td></tr></table></figure><p>利用new Object创建对象</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//利用new Object创建对象</span></span><br><span class="line"><span class="keyword">let</span> obj1 = <span class="keyword">new</span> <span class="title class_">Object</span>();<span class="comment">//创建了一个空对象</span></span><br><span class="line">obj1.<span class="property">uname</span> = <span class="string">&#x27;shiff&#x27;</span>;</span><br><span class="line">obj1.<span class="property">age</span> = <span class="number">18</span>;</span><br><span class="line">obj1.<span class="property">gender</span> = <span class="string">&#x27;女&#x27;</span>;</span><br><span class="line">obj1.<span class="property">sayHi</span> = <span class="keyword">function</span> (<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Hi&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj1.<span class="property">uname</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj1[<span class="string">&#x27;uname&#x27;</span>]);</span><br><span class="line">obj1.<span class="title function_">sayHi</span>();</span><br></pre></td></tr></table></figure><p>利用<strong>构造函数</strong>创建对象</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> 构造函数名()&#123;</span><br><span class="line">    <span class="variable language_">this</span>.属性 = 值；</span><br><span class="line">    <span class="variable language_">this</span>.方法 = <span class="keyword">function</span> (<span class="params"></span>)&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">new</span> 构造函数名();</span><br><span class="line"></span><br><span class="line"><span class="comment">//利用构造函数创造对象</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Star</span>(<span class="params">uname, age, gender</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">name</span> = uname;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">age</span> = age;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">gender</span> = gender;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">sing</span> = <span class="keyword">function</span>(<span class="params">song</span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(song)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> ldh = <span class="keyword">new</span> <span class="title class_">Star</span>(<span class="string">&#x27;刘德华&#x27;</span>,<span class="number">18</span>,<span class="string">&#x27;男&#x27;</span>);<span class="comment">//调用函数返回的是一个对象</span></span><br><span class="line"><span class="comment">//1.构造函数名字首字母要大写</span></span><br><span class="line"><span class="comment">//2.构造函数不需要return 就可以返回对象</span></span><br><span class="line"><span class="comment">//3.调用构造函数，必须要使用new</span></span><br><span class="line"><span class="comment">//4.属性和方法面前必须添加this</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(ldh.<span class="property">name</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(ldh[<span class="string">&#x27;gender&#x27;</span>])</span><br><span class="line">ldh.<span class="title function_">sing</span>(<span class="string">&#x27;冰雨&#x27;</span>);</span><br></pre></td></tr></table></figure><blockquote><p>构造函数，是抽象了对象的公共部分，封装到了函数里面</p><p>通过<code>new</code>关键字创建对象的过程称为对象实例化</p></blockquote><h4 id="new关键字执行过程"><a href="#new关键字执行过程" class="headerlink" title="new关键字执行过程"></a><strong>new关键字执行过程</strong></h4><ol><li>new构造函数在内存中创建一个空的对象</li><li>this就会指向刚才创建的空对象</li><li>执行构造函数里面的代码，给这个空对象添加属性和方法</li><li>返回这个对象</li></ol><h4 id="遍历对象"><a href="#遍历对象" class="headerlink" title="遍历对象"></a><strong>遍历对象</strong></h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> obj = &#123;</span><br><span class="line">    name : <span class="string">&#x27;shiff&#x27;</span>,</span><br><span class="line">    age : <span class="number">18</span>,</span><br><span class="line">    <span class="attr">gender</span>: <span class="string">&#x27;女&#x27;</span>,</span><br><span class="line">    <span class="attr">fn</span>: <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;233&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// for(变量in对象)&#123;&#125;</span></span><br><span class="line"><span class="comment">//也可以遍历方法</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> k <span class="keyword">in</span> obj)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(k);<span class="comment">//k变量输出 得到的是属性名</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(obj[k]);<span class="comment">//obj[k]得到的是属性值</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="JS的内置对象"><a href="#JS的内置对象" class="headerlink" title="JS的内置对象"></a>JS的内置对象</h3><p>JS中的对象类型：</p><ul><li>自定义对象</li><li>内置对象</li><li>浏览器对象</li></ul><h4 id="Math对象"><a href="#Math对象" class="headerlink" title="Math对象"></a>Math对象</h4><p>常用方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Math</span>.<span class="property">PI</span><span class="comment">//圆周率</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">floor</span>()<span class="comment">//向下取整</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">ceil</span>()<span class="comment">//向上取整</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">round</span>()<span class="comment">//四舍五入 就近取整</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">abs</span>()<span class="comment">//绝对值</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">max</span>()/<span class="title class_">Math</span>.<span class="title function_">min</span>()<span class="comment">//最大/最小值</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">random</span>()<span class="comment">//随机数</span></span><br></pre></td></tr></table></figure><h4 id="日期对象"><a href="#日期对象" class="headerlink" title="日期对象"></a>日期对象</h4><p>Date()日期对象是一个构造函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建一个对象</span></span><br><span class="line"><span class="keyword">let</span> date = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line"><span class="comment">//如果没有参数，返回系统的当前时间</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(date.<span class="title function_">valueof</span>());</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(date.<span class="title function_">getTime</span>());</span><br><span class="line"><span class="title function_">valueof</span>()</span><br><span class="line"><span class="title function_">getTime</span>()</span><br><span class="line"><span class="comment">//返回我们现在时间距离1970.1.1总的毫秒数(时间戳)</span></span><br><span class="line"><span class="comment">//也可以</span></span><br><span class="line">date1 =  +<span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(date1);</span><br><span class="line"><span class="comment">//h5新增</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Date</span>.<span class="title function_">now</span>());<span class="comment">//不需要创建实例</span></span><br></pre></td></tr></table></figure><p>倒计时：将来的时间戳-现在时间戳</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">repairZero</span>(<span class="params">a</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> a &gt; <span class="number">10</span> ? a : <span class="string">&#x27;0&#x27;</span> + a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">countDown</span>(<span class="params">time</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> nowTime = +<span class="keyword">new</span> <span class="title class_">Date</span>();<span class="comment">//返回的是当前时间总的毫秒数</span></span><br><span class="line">    <span class="keyword">let</span> inputTime = +<span class="keyword">new</span> <span class="title class_">Date</span>(time);<span class="comment">//返回的是用户输入时间总的毫秒数</span></span><br><span class="line">    <span class="keyword">let</span> times = (inputTime - nowTime) / <span class="number">1000</span>; <span class="comment">//除以1000得到秒数</span></span><br><span class="line">    <span class="keyword">let</span> d = <span class="built_in">parseInt</span>(times/<span class="number">60</span>/<span class="number">60</span>/<span class="number">24</span>);<span class="comment">//天</span></span><br><span class="line">    d = <span class="title function_">repairZero</span>(d);</span><br><span class="line">    <span class="keyword">let</span> h = <span class="built_in">parseInt</span>(times/<span class="number">60</span>/<span class="number">60</span>%<span class="number">24</span>);<span class="comment">//时</span></span><br><span class="line">    h = <span class="title function_">repairZero</span>(h);</span><br><span class="line">    <span class="keyword">let</span> m = <span class="built_in">parseInt</span>(times/<span class="number">60</span>%<span class="number">60</span>);<span class="comment">//分</span></span><br><span class="line">    m = <span class="title function_">repairZero</span>(m);</span><br><span class="line">    <span class="keyword">let</span> s = <span class="built_in">parseInt</span>(times%<span class="number">60</span>);<span class="comment">//当前的秒</span></span><br><span class="line">    s = <span class="title function_">repairZero</span>(s);</span><br><span class="line">    <span class="keyword">return</span> d + <span class="string">&#x27;天&#x27;</span> + h + <span class="string">&#x27;时&#x27;</span> + m + <span class="string">&#x27;分&#x27;</span> + s +<span class="string">&#x27;秒&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">countDown</span>(<span class="string">&quot;2022-8-17 15:11:00&quot;</span>));</span><br></pre></td></tr></table></figure><h4 id="数组对象"><a href="#数组对象" class="headerlink" title="数组对象"></a>数组对象</h4><p>创建数组</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>字面量</span><br><span class="line"><span class="keyword">let</span> arr = [];<span class="comment">//空数组</span></span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>构造函数</span><br><span class="line"><span class="keyword">let</span> arr1 = <span class="keyword">new</span> <span class="title class_">Array</span>(<span class="number">2</span>);<span class="comment">//创建数组长度为2的空数组</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> arr2 = <span class="keyword">new</span> <span class="title class_">Array</span>(<span class="number">2</span>,<span class="number">3</span>);<span class="comment">//等价于[2,3]有两个数组元素</span></span><br></pre></td></tr></table></figure><p>检测是否为数组</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span><span class="keyword">instanceof</span> 运算符</span><br><span class="line"></span><br><span class="line">arr <span class="keyword">instanceof</span> <span class="title class_">Array</span>;<span class="comment">//值为true或false判断arr是否为数组</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">2.</span><span class="title class_">Array</span>.<span class="title function_">isArray</span>([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]);<span class="comment">//true</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Array</span>.<span class="title function_">isArray</span>(<span class="string">&#x27;shiff&#x27;</span>);<span class="comment">//false</span></span><br><span class="line"><span class="comment">//返回true或者false，H5新增，ie9以上版本支持</span></span><br></pre></td></tr></table></figure><p>添加删除数组的方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.push()在数组末尾添加一个或多个元素</span></span><br><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line">arr.<span class="title function_">push</span>(<span class="number">4</span>);<span class="comment">//arr = [1,2,3,4]</span></span><br><span class="line">arr.<span class="title function_">push</span>(<span class="number">5</span>,<span class="string">&#x27;pink&#x27;</span>);<span class="comment">//arr = [1,2,3,4,5,&#x27;pink&#x27;]</span></span><br><span class="line"><span class="comment">//push的返回值是新数组的长度，原素组也会发生变化</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="title function_">push</span>(<span class="number">6</span>));<span class="comment">//7</span></span><br><span class="line"><span class="comment">//2.unshift在数组前面添加一个或多个元素，基本特性与push想同</span></span><br><span class="line">arr.<span class="title function_">unshift</span>(<span class="string">&#x27;red&#x27;</span>,<span class="string">&#x27;green&#x27;</span>);</span><br><span class="line"><span class="comment">//3.pop()删除数组中的最后一个元素</span></span><br><span class="line">arr.<span class="title function_">pop</span>();</span><br><span class="line"><span class="comment">//返回是的删除的那个元素，原数组会发生变化</span></span><br><span class="line"><span class="comment">//4.shift()删除数组的第一个元素</span></span><br><span class="line"><span class="comment">//返回的是删除的那个元素，原数组会发生变化</span></span><br><span class="line">arr.<span class="title function_">shift</span>();</span><br></pre></td></tr></table></figure><p>翻转数组：<code>arr.reverse()</code></p><p>冒泡排序：<code>arr.sort()</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">arr.<span class="title function_">sort</span>(<span class="keyword">function</span>(<span class="params">a,b</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> a - b;<span class="comment">//升序</span></span><br><span class="line">    <span class="comment">//return b - a;//降序</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr);</span><br></pre></td></tr></table></figure><p>数组索引方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="string">&#x27;red&#x27;</span>,<span class="string">&#x27;blue&#x27;</span>,<span class="string">&#x27;pink&#x27;</span>,<span class="string">&#x27;blue&#x27;</span>]；</span><br><span class="line"><span class="keyword">let</span> a = arr.<span class="title function_">indexOf</span>(<span class="string">&#x27;blue&#x27;</span>);<span class="comment">// a = 1;</span></span><br><span class="line"><span class="comment">//indexOf返回第一个满足条件bule的索引号</span></span><br><span class="line"><span class="comment">//如果找不到该元素，返回-1</span></span><br><span class="line"><span class="comment">//lastindexOf从后面往前查找第一个为blue的索引号</span></span><br><span class="line"><span class="keyword">let</span> b = arr.<span class="title function_">lastindexOf</span>(<span class="string">&#x27;blue&#x27;</span>);<span class="comment">//b = 3</span></span><br></pre></td></tr></table></figure><p>数组转换为字符串</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span><span class="title function_">toString</span>()将我们的数组转换为字符串</span><br><span class="line"><span class="keyword">let</span> a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line"><span class="keyword">let</span> string = a.<span class="title function_">toString</span>();<span class="comment">//1,2,3</span></span><br><span class="line"></span><br><span class="line"><span class="number">2.</span><span class="title function_">join</span>(分隔符)</span><br><span class="line"><span class="keyword">let</span> b = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line"><span class="keyword">let</span> s = b.<span class="title function_">join</span>(<span class="string">&#x27;-&#x27;</span>);<span class="comment">//1-2-3</span></span><br><span class="line"><span class="keyword">let</span> s = b.<span class="title function_">join</span>(<span class="string">&#x27;&amp;&#x27;</span>);<span class="comment">//1&amp;2&amp;3</span></span><br></pre></td></tr></table></figure><ul><li><code>concat()</code>:连接两个或多个数组，返回值为一个新的数组</li><li><code>slice()</code>:数组截取<code>slice(begin,end)</code>，返回被截取的新数组</li><li><code>splice()</code>:数组删除<code>splice(第几个开始，要删除几个数)</code>,返回被删除的新数组，且会影响到原数组</li></ul><h3 id="基本包装类型-字符串"><a href="#基本包装类型-字符串" class="headerlink" title="基本包装类型:字符串"></a>基本包装类型:字符串</h3><p>把简单数据类型包装为了复杂数据类型</p><ul><li>String</li><li>Number</li><li>Boolean</li></ul><p><img src="https://cdn.staticaly.com/gh/SHIFFF/Blogcdn@master/img/image-20220817152010722.png" alt="image-20220817152010722"></p><p><img src="https://cdn.staticaly.com/gh/SHIFFF/Blogcdn@master/img/image-20220817153317139.png" alt="image-20220817153317139"></p><p><img src="https://cdn.staticaly.com/gh/SHIFFF/Blogcdn@master/img/image-20220817153821881.png" alt="image-20220817153821881"></p><p><img src="https://cdn.staticaly.com/gh/SHIFFF/Blogcdn@master/img/image-20220817154139984.png" alt="image-20220817154139984"></p><h2 id="Web-APIs：DOM-BOM"><a href="#Web-APIs：DOM-BOM" class="headerlink" title="Web APIs：DOM+BOM"></a>Web APIs：DOM+BOM</h2><h3 id="API"><a href="#API" class="headerlink" title="API"></a>API</h3><p>应用程序编程接口，是一些预定义函数</p><p><strong>Web API</strong>是浏览器提供的浏览器功能和页面元素的AIP</p><h3 id="DOM"><a href="#DOM" class="headerlink" title="DOM"></a>DOM</h3><p>处理HTML和XML的接口</p><p><img src="https://cdn.staticaly.com/gh/SHIFFF/Blogcdn@master/img/image-20220817185243063.png" alt="image-20220817185243063"></p><ul><li>文档：一个页面</li><li>元素：所有标签</li><li>节点：所有内容（标签、属性、文本、注释）</li></ul><h4 id="获取元素"><a href="#获取元素" class="headerlink" title="获取元素"></a>获取元素</h4><ul><li><p>通过ID获取：getElementById()</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;time&quot;</span>&gt;<span class="number">2019</span>-<span class="number">9</span>-<span class="number">9</span>&lt;/div&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="comment">//1.getElementById()通过获取元素id获得元素对象</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">let</span> timer = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;time&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="variable language_">console</span>.<span class="title function_">log</span>(timer);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> timer);<span class="comment">//返回的是对象</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="variable language_">console</span>.<span class="title function_">dir</span>(timer);<span class="comment">//dir查看对象的属性和方法</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li><li><p>通过标签获取：getElementsByTagName()</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">li</span>&gt;</span>你是大好人<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">li</span>&gt;</span>你是大好人<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">li</span>&gt;</span>你是大好人<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">li</span>&gt;</span>你是大好人<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">li</span>&gt;</span>你是大好人<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">&lt;/ul&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">//返回的是 获取过来的元素对象的集合 以伪数组的形式存储</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">let</span> lis = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;li&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">console</span>.<span class="title function_">log</span>(lis);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">console</span>.<span class="title function_">log</span>(lis[<span class="number">0</span>]);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">//用for遍历</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; lis.<span class="property">length</span>; i++) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">console</span>.<span class="title function_">log</span>(lis[<span class="number">0</span>]);<span class="comment">//得到的元素是动态的</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="comment">//如果页面中只有一个li，返回的还是伪数组的形式</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="comment">//如果界面中没有元素，会返回一个空的伪数组</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">获取ul标签下的li标签</span><br><span class="line">element.<span class="title function_">getElementsByTagName</span>(),获取的时候不包括父元素自己</span><br><span class="line"><span class="comment">//获取文档中的所有ul,注意：伪数组不能作为父元素，一定要指明是哪一个</span></span><br><span class="line"><span class="keyword">let</span> ul = <span class="variable language_">document</span>.<span class="title function_">getElementByTagName</span>(<span class="string">&#x27;ul&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> li = ul[<span class="number">0</span>].<span class="title function_">getElementByTagName</span>(<span class="string">&#x27;li&#x27;</span>);</span><br></pre></td></tr></table></figure></li><li><p>通过类名获取元素：document.getElementsByClassName(‘类名’)</p></li><li><p>通过**querySelector()**获取元素，返回的是第一个元素对象</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//通过类名获取元素，返回一个伪数组</span></span><br><span class="line"><span class="keyword">let</span> boxes = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&#x27;box&#x27;</span>);</span><br><span class="line"><span class="comment">//querySelctor返回指定选择器的第一个元素对象</span></span><br><span class="line"><span class="comment">//通过类名.类名</span></span><br><span class="line"><span class="keyword">let</span> firstbox = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.box&#x27;</span>);</span><br><span class="line"><span class="comment">//通过id #id名</span></span><br><span class="line"><span class="keyword">let</span> nav = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#nav&#x27;</span>);</span><br><span class="line"><span class="comment">//通过标签名</span></span><br><span class="line"><span class="keyword">let</span> li = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;li&#x27;</span>);</span><br></pre></td></tr></table></figure></li><li><p>获取body元素：<code>document.body</code></p></li><li><p>获取html元素：<code>document.documentElement</code></p></li></ul><h4 id="事件基础"><a href="#事件基础" class="headerlink" title="事件基础"></a>事件基础</h4><p>事件：监控行为——————触发响应</p><p>事件三要素：事件源、事件类型、事件处理程序</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;button id = <span class="string">&quot;btn&quot;</span>&gt;唐伯虎&lt;/button&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">//点击一个按钮，弹出对话框</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">//事件有三部分组成：事件源、事件类型、事件处理程序</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">//事件源：事件被触发的对象  按钮</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">let</span> btn = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;btn&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">//事件类型： 如何触发 比如鼠标点击</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">//事件处理程序 通过一个函数赋值的方式完成</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    btn.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title function_">alert</span>(<span class="string">&#x27;点秋香&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>执行步骤三要素：</p><ol><li>获取事件源</li><li>注册事件（绑定事件）</li><li>添加事件处理程序（采用函数赋值形式）</li></ol><p>常见的鼠标事件</p><p><img src="https://cdn.staticaly.com/gh/SHIFFF/Blogcdn@master/img/image-20220818003550188.png" alt="image-20220818003550188"></p><h4 id="操作元素"><a href="#操作元素" class="headerlink" title="操作元素"></a>操作元素</h4><p>利用DOM操作元素来改变元素里面的内容、属性</p><p><strong>改变元素内容</strong></p><ul><li><p><strong>element.innerText</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">//当我们点击了按钮，div里面的文字会发生变化</span></span><br><span class="line">    <span class="keyword">let</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;button&#x27;</span>);</span><br><span class="line">    <span class="keyword">let</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">    btn.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        div.<span class="property">innerText</span> = <span class="title function_">getDate</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">getDate</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> date = <span class="keyword">new</span> <span class="title class_">Date</span>();<span class="comment">//获得一个时间对象，里面不写内容就是当前时间，动态的</span></span><br><span class="line">        <span class="keyword">let</span> year = date.<span class="title function_">getFullYear</span>();</span><br><span class="line">        <span class="keyword">let</span> month = date.<span class="title function_">getMonth</span>() + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">let</span> dates = date.<span class="title function_">getDate</span>();</span><br><span class="line">        <span class="keyword">let</span> arr = [<span class="string">&#x27;星期日&#x27;</span>, <span class="string">&#x27;星期一&#x27;</span>, <span class="string">&#x27;星期二&#x27;</span>, <span class="string">&#x27;星期三&#x27;</span>, <span class="string">&#x27;星期四&#x27;</span>, <span class="string">&#x27;星期五&#x27;</span>, <span class="string">&#x27;星期六&#x27;</span>];</span><br><span class="line">        <span class="keyword">let</span> day = date.<span class="title function_">getDay</span>();<span class="comment">//获得星期几</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;今天是：&#x27;</span> + year + <span class="string">&#x27;年&#x27;</span> + month + <span class="string">&#x27;月&#x27;</span> + dates + <span class="string">&#x27;日&#x27;</span> + arr[day];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//我们元素可以不用添加时间</span></span><br><span class="line">    <span class="keyword">let</span> p = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;p&#x27;</span>);</span><br><span class="line">    p.<span class="property">innerText</span> = <span class="title function_">getDate</span>();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p><strong>elemen.innerHTML</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">//innerText和innerHTML的区别</span></span><br><span class="line">    <span class="comment">//1.innerText 不识别html标签 非标准 去除空格和换行</span></span><br><span class="line">    <span class="keyword">let</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">    div.<span class="property">innerText</span> = <span class="string">&#x27;&lt;strong&gt;今天是：2022&lt;strong&gt;&#x27;</span></span><br><span class="line">    <span class="comment">//1.innerText 识别html标签 W3C标准</span></span><br><span class="line">    div.<span class="property">innerHTML</span> = <span class="string">&#x27;&lt;strong&gt;今天是：2022&lt;strong&gt;&#x27;</span></span><br><span class="line">    <span class="comment">//这两个属性是可读写的 可以获取元素里面的内容 保留空格和换行</span></span><br><span class="line">    p = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;p&#x27;</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(p.<span class="property">innerText</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(p.<span class="property">innerHTML</span>);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ul><p><strong>常见元素的属性操作</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">//修改元素属性 scr</span></span><br><span class="line">    <span class="comment">//1.获取元素</span></span><br><span class="line">    <span class="keyword">let</span> pic1 = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;1&#x27;</span>);</span><br><span class="line">    <span class="keyword">let</span> pic2 = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;2&#x27;</span>);</span><br><span class="line">    <span class="keyword">let</span> img = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;img&#x27;</span>);</span><br><span class="line">    <span class="comment">//2.注册事件</span></span><br><span class="line">    pic2.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>)&#123;</span><br><span class="line">        img.<span class="property">src</span> = <span class="string">&#x27;images/暂无考勤记录.png&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    pic1.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>)&#123;</span><br><span class="line">        img.<span class="property">src</span> = <span class="string">&#x27;images/暂无回放.png&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>表单元素的操作属性</strong></p><p>常见表单属性：</p><ul><li>type</li><li>value</li><li>checked</li><li>selected</li><li>disabled</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">//1.获取元素</span></span><br><span class="line">    <span class="keyword">let</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;button&#x27;</span>);</span><br><span class="line">    <span class="keyword">let</span> input = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;input&#x27;</span>);</span><br><span class="line">    <span class="comment">//2.注册事件 处理程序</span></span><br><span class="line">    btn.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>)&#123;</span><br><span class="line">        <span class="comment">// input.innerHTML = &#x27;点击了&#x27;; 这个是普通盒子，比如div标签里面的内容</span></span><br><span class="line">        <span class="comment">//表单里面的值 文字内容是通过value来修改的</span></span><br><span class="line">        input.<span class="property">value</span> = <span class="string">&#x27;被点击了&#x27;</span>;</span><br><span class="line">        <span class="comment">//如果想要某个表单被禁用 不能再点击 disabled</span></span><br><span class="line">        <span class="comment">//btn.disabled = true;//禁用该表单</span></span><br><span class="line">        <span class="comment">//也可以</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">disabled</span> = <span class="literal">true</span>;<span class="comment">//this指向的是时间函数的调用这，即btn</span></span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>样式属性操作</strong></p><ul><li><p><code>element.style</code>:行内样式操作</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">test.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">color</span> = <span class="string">&#x27;#fff&#x27;</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">fontSize</span> = <span class="string">&#x27;25px&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>element.className</code>：类名样式操作</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;div &gt;</span><br><span class="line">    文本</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">const</span> test = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    test.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">//点击后让div获取类名</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">//让当前元素的类名改为change&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">this</span>.<span class="property">className</span> = <span class="string">&#x27;change&#x27;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">//可以通过修改元素的classname更改元素的样式，适合于样式较多或者功能较复杂的情况</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">//如果想要保留原先的类名，使用多类名选择器</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">this</span>.<span class="property">className</span> = <span class="string">&#x27;first change&#x27;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/SHIFFF/Blogcdn@master/img/image-20221023182746829.png" alt="image-20221023182746829"></p></li></ul><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p><img src="https://cdn.staticaly.com/gh/SHIFFF/Blogcdn@master/img/image-20221024225404480.png" alt="image-20221024225404480"></p><h4 id="排他算法"><a href="#排他算法" class="headerlink" title="排他算法"></a>排他算法</h4><p><img src="https://cdn.staticaly.com/gh/SHIFFF/Blogcdn@master/img/image-20221024232758635.png" alt="image-20221024232758635"><br>先排除其他人，在设置自己的样式</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">//1.获取所有按钮元素</span></span><br><span class="line">    <span class="keyword">const</span> bts = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;button&#x27;</span>);</span><br><span class="line">    <span class="comment">//btns得到的是伪数组</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; bts.<span class="property">length</span>; i++)&#123;</span><br><span class="line">        bts[i].<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>)&#123;</span><br><span class="line">            <span class="comment">//1.我们先把所有的按钮背景颜色去掉</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; bts.<span class="property">length</span>; i++)&#123;</span><br><span class="line">                bts[i].<span class="property">style</span>.<span class="property">backgroundColor</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//2.然后再让当前的颜色变为pink色</span></span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">backgroundColor</span> = <span class="string">&#x27;pink&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="http://shiff.top/categories/%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/">课程笔记</category>
      
      <category domain="http://shiff.top/categories/%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/JavaScript%E5%9F%BA%E7%A1%80/">JavaScript基础</category>
      
      
      <category domain="http://shiff.top/tags/JavaScript/">JavaScript</category>
      
      <category domain="http://shiff.top/tags/%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/">课程笔记</category>
      
      
      <comments>http://shiff.top/2023/03/12/JavaScript%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95-dom-bom-js-es6%E6%96%B0%E8%AF%AD%E6%B3%95-jQuery-%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>数据库报错Incorrect-string-value</title>
      <link>http://shiff.top/2023/03/12/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8A%A5%E9%94%99Incorrect-string-value/</link>
      <guid>http://shiff.top/2023/03/12/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8A%A5%E9%94%99Incorrect-string-value/</guid>
      <pubDate>Sun, 12 Mar 2023 09:32:36 GMT</pubDate>
      
        
        
      <description>&lt;h3 id=&quot;数据库报错Incorrect-string-value-‘-xE7-x94-xB7‘-for-column-‘name‘-at-row-1&quot;&gt;&lt;a href=&quot;#数据库报错Incorrect-string-value-‘-xE7-x94-xB7‘-for-colu</description>
        
      
      
      
      <content:encoded><![CDATA[<h3 id="数据库报错Incorrect-string-value-‘-xE7-x94-xB7‘-for-column-‘name‘-at-row-1"><a href="#数据库报错Incorrect-string-value-‘-xE7-x94-xB7‘-for-column-‘name‘-at-row-1" class="headerlink" title="数据库报错Incorrect string value: ‘\xE7\x94\xB7‘ for column ‘name‘ at row 1"></a>数据库报错Incorrect string value: ‘\xE7\x94\xB7‘ for column ‘name‘ at row 1</h3><p><img src="C:\Users\12726\AppData\Roaming\Typora\typora-user-images\image-20230312024828536.png" alt="image-20230312024828536"></p><p>报错内容为在name列插入的第一条数据的字符串值是不正确的，主要原因是我插入的数据为汉字，为中文字符串，需要使用到utf-8字符集，而默认是使用的是latin1字符集。</p><p>解决方案：用这个命令更改表名，去覆盖它的原有字符集，就可以实现成功插入中文</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE interface_info（这里改成自己的表名） CONVERT TO CHARACTER SET utf8;</span><br></pre></td></tr></table></figure><p>参考博文：<a href="https://blog.csdn.net/weixin_63639665/article/details/128206602">https://blog.csdn.net/weixin_63639665/article/details/128206602</a></p>]]></content:encoded>
      
      
      <category domain="http://shiff.top/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/">数据库</category>
      
      <category domain="http://shiff.top/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/">MySQL</category>
      
      
      <category domain="http://shiff.top/tags/%E8%B8%A9%E5%9D%91/">踩坑</category>
      
      <category domain="http://shiff.top/tags/MySQL/">MySQL</category>
      
      
      <comments>http://shiff.top/2023/03/12/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8A%A5%E9%94%99Incorrect-string-value/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>idea的全局搜索（替换）快捷键</title>
      <link>http://shiff.top/2023/03/12/idea%E7%9A%84%E5%85%A8%E5%B1%80%E6%90%9C%E7%B4%A2%EF%BC%88%E6%9B%BF%E6%8D%A2%EF%BC%89%E5%BF%AB%E6%8D%B7%E9%94%AE/</link>
      <guid>http://shiff.top/2023/03/12/idea%E7%9A%84%E5%85%A8%E5%B1%80%E6%90%9C%E7%B4%A2%EF%BC%88%E6%9B%BF%E6%8D%A2%EF%BC%89%E5%BF%AB%E6%8D%B7%E9%94%AE/</guid>
      <pubDate>Sun, 12 Mar 2023 09:22:41 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;idea的全局搜索（替换）快捷键&quot;&gt;&lt;a href=&quot;#idea的全局搜索（替换）快捷键&quot; class=&quot;headerlink&quot; title=&quot;idea的全局搜索（替换）快捷键&quot;&gt;&lt;/a&gt;idea的全局搜索（替换）快捷键&lt;/h2&gt;&lt;p&gt;可以鼠标选中想要搜索的内容在</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="idea的全局搜索（替换）快捷键"><a href="#idea的全局搜索（替换）快捷键" class="headerlink" title="idea的全局搜索（替换）快捷键"></a>idea的全局搜索（替换）快捷键</h2><p>可以鼠标选中想要搜索的内容在按快捷键或者按完快捷键后输入想要搜索的内容</p><ul><li>ctrl+F 搜索范围为当前文件，不可替换</li></ul><p><img src="https://cdn.staticaly.com/gh/SHIFFF/Blogcdn@master/img/image-20230311230431152.png" alt="image"></p><ul><li>ctrl+R 搜索范围为当前文件，可替换</li></ul><p><img src="https://cdn.staticaly.com/gh/SHIFFF/Blogcdn@master/img/image-20230312034130905.png" alt="image-20230312034130905"></p><ul><li>ctrl+shift+R 搜索范围为整个项目，可替换</li></ul><p><img src="https://cdn.staticaly.com/gh/SHIFFF/Blogcdn@master/img/image-20230311230702057.png" alt="image-20230311230702057"></p>]]></content:encoded>
      
      
      
      <category domain="http://shiff.top/tags/%E5%BF%AB%E6%8D%B7%E9%94%AE/">快捷键</category>
      
      <category domain="http://shiff.top/tags/%E8%B8%A9%E5%9D%91/">踩坑</category>
      
      <category domain="http://shiff.top/tags/idea/">idea</category>
      
      
      <comments>http://shiff.top/2023/03/12/idea%E7%9A%84%E5%85%A8%E5%B1%80%E6%90%9C%E7%B4%A2%EF%BC%88%E6%9B%BF%E6%8D%A2%EF%BC%89%E5%BF%AB%E6%8D%B7%E9%94%AE/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>站点记录</title>
      <link>http://shiff.top/2023/03/12/%E7%AB%99%E7%82%B9%E8%AE%B0%E5%BD%95/</link>
      <guid>http://shiff.top/2023/03/12/%E7%AB%99%E7%82%B9%E8%AE%B0%E5%BD%95/</guid>
      <pubDate>Sun, 12 Mar 2023 07:41:51 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;站点记录&quot;&gt;&lt;a href=&quot;#站点记录&quot; class=&quot;headerlink&quot; title=&quot;站点记录&quot;&gt;&lt;/a&gt;站点记录&lt;/h2&gt;&lt;h3 id=&quot;工具类站点&quot;&gt;&lt;a href=&quot;#工具类站点&quot; class=&quot;headerlink&quot; title=&quot;工具类站点&quot;&gt;</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="站点记录"><a href="#站点记录" class="headerlink" title="站点记录"></a>站点记录</h2><h3 id="工具类站点"><a href="#工具类站点" class="headerlink" title="工具类站点"></a>工具类站点</h3><p>1.时间戳转换： <a href="https://tool.lu/timestamp">https://tool.lu/timestamp</a><br>2.b站视频下载： <a href="https://www.urlgot.cn/">https://www.urlgot.cn/</a></p><h3 id="学习类站点"><a href="#学习类站点" class="headerlink" title="学习类站点"></a>学习类站点</h3><h4 id="官方文档"><a href="#官方文档" class="headerlink" title="官方文档"></a>官方文档</h4><ul><li><a href="https://developers.aliwork.com/docs/guide/start">钉钉宜搭.开发者中心</a></li><li>前端框架：<a href="https://pro.ant.design/zh-CN/docs/getting-started">ant.design.pro</a></li><li>博客框架：<a href="https://hexo.io/zh-cn/docs">hexo文档</a></li></ul><h3 id="仓库类站点"><a href="#仓库类站点" class="headerlink" title="仓库类站点"></a>仓库类站点</h3>]]></content:encoded>
      
      
      
      <category domain="http://shiff.top/tags/%E7%AB%99%E7%82%B9%E9%93%BE%E6%8E%A5/">站点链接</category>
      
      
      <comments>http://shiff.top/2023/03/12/%E7%AB%99%E7%82%B9%E8%AE%B0%E5%BD%95/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>利用idea和maven仓库下载依赖</title>
      <link>http://shiff.top/2023/03/11/%E5%88%A9%E7%94%A8idea%E5%92%8Cmaven%E4%BB%93%E5%BA%93%E4%B8%8B%E8%BD%BD%E4%BE%9D%E8%B5%96/</link>
      <guid>http://shiff.top/2023/03/11/%E5%88%A9%E7%94%A8idea%E5%92%8Cmaven%E4%BB%93%E5%BA%93%E4%B8%8B%E8%BD%BD%E4%BE%9D%E8%B5%96/</guid>
      <pubDate>Fri, 10 Mar 2023 21:53:29 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;利用idea和maven仓库下载依赖&quot;&gt;&lt;a href=&quot;#利用idea和maven仓库下载依赖&quot; class=&quot;headerlink&quot; title=&quot;利用idea和maven仓库下载依赖&quot;&gt;&lt;/a&gt;利用idea和maven仓库下载依赖&lt;/h2&gt;&lt;p&gt;以添加&lt;a </description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="利用idea和maven仓库下载依赖"><a href="#利用idea和maven仓库下载依赖" class="headerlink" title="利用idea和maven仓库下载依赖"></a>利用idea和maven仓库下载依赖</h2><p>以添加<a href="https://mvnrepository.com/artifact/com.baomidou/mybatis-plus-boot-starter">MyBatis Plus</a>依赖为例</p><p>背景：用spring boot 初始化一个项目后，发现MyBatis Plus依赖没有添加</p><p><strong>1.在maven仓库搜索mybaits-plus</strong></p><p>仓库地址：<a href="https://mvnrepository.com(不同浏览器访问速度不一样,我用的火狐浏览器,感觉比用谷歌访问快很多,如果无法访问,可以换浏览器试试)/">https://mvnrepository.com（不同浏览器访问速度不一样，我用的火狐浏览器，感觉比用谷歌访问快很多，如果无法访问，可以换浏览器试试）</a></p><p><img src="https://cdn.staticaly.com/gh/SHIFFF/Blogcdn@master/img/image-20230311053841423.png" alt="image-20230311053841423"></p><p>点击选中使用最多的包</p><p><strong>2.版本可以自行选择，尽量选择使用人数比较多的那个版本</strong></p><p><img src="https://cdn.staticaly.com/gh/SHIFFF/Blogcdn@master/img/image-20230311053955492.png" alt="image-20230311053955492"></p><p><strong>3.如果使用maven管理的包，直接复制框中的代码</strong></p><p><img src="https://cdn.staticaly.com/gh/SHIFFF/Blogcdn@master/img/image-20230311054228774.png" alt="image-20230311054228774"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.baomidou/mybatis-plus-boot-starter --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>4.将复制的代码黏贴到pom.xml文件的依赖标签<code>&lt;dependencies&gt;</code>下，同时点击右上角的M图标进行更新</strong></p><p><img src="https://cdn.staticaly.com/gh/SHIFFF/Blogcdn@master/img/image-20230311054522516.png" alt="image-20230311054522516"></p><p>右上角没有图标的话，可以右边栏（或者在左边）的Maven标签打开配置栏</p><p><img src="https://cdn.staticaly.com/gh/SHIFFF/Blogcdn@master/img/image-20230311054738541.png" alt="image-20230311054738541"></p><p>点击刷新按钮进行更新下载依赖</p><p><img src="https://cdn.staticaly.com/gh/SHIFFF/Blogcdn@master/img/image-20230311054938693.png" alt="image-20230311054938693"></p>]]></content:encoded>
      
      
      
      <category domain="http://shiff.top/tags/idea/">idea</category>
      
      <category domain="http://shiff.top/tags/maven/">maven</category>
      
      <category domain="http://shiff.top/tags/%E4%BE%9D%E8%B5%96%E7%AE%A1%E7%90%86/">依赖管理</category>
      
      
      <comments>http://shiff.top/2023/03/11/%E5%88%A9%E7%94%A8idea%E5%92%8Cmaven%E4%BB%93%E5%BA%93%E4%B8%8B%E8%BD%BD%E4%BE%9D%E8%B5%96/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
